pool:
  vmImage: ubuntu-latest

variables:
  - group: cgm-rg

parameters:
  - name: var_groups
    type: object
    default:
      - sandbox
#      - demo-qa
#      - inbmz
#      - naunam

stages:
  - stage: Build
    jobs:
      - job: Build
        displayName: Build Docker image
        steps:
          - script: echo todo

  - ${{ each env in parameters.var_groups }}:
    - stage: Deploy_${{ replace(env, '-', '_') }}
      displayName: Deploy ${{ env }}
      dependsOn:
        - Build
#      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
      variables:
        - group: cgm-rg-${{ env }}-ci
      jobs:
        - deployment: Deploy_Container_Instance
          displayName: "Container Instance deployment ${{ env }}"
          environment: cgm-rg-${{ env }}-env
          strategy:
            runOnce:
              deploy:
                steps:
                  - script: sudo snap install yq
                  - task: AzureCLI@2
                    displayName: Update Container Instance
                    inputs:
                      azureSubscription: cgm-${{ env }}-sub-cd
                      scriptType: bash
                      scriptLocation: inlineScript
                      inlineScript: |
                        set -e

                        IMAGE_TAG=latest
                        IMAGE=$TARGET_REGISTRY/$IMAGE_REPOSITORY:$IMAGE_TAG

                        TMP_CONF_FILE=rg-ci-conf.yaml
                        az container export \
                          --name cgmbecidevrgaci \
                          --resource-group "$TARGET_RESOURCE_GROUP" \
                          --file "$TMP_CONF_FILE"

                        # Replace image
                        IMAGE=cgmbecidevacr.azurecr.io/welthungerhilfe/cgm-rg:latest
                        export IMAGE
                        yq eval '.properties.containers[0].properties.image = strenv(IMAGE)' "$TMP_CONF_FILE" -i


                        # Insert registry credentials
                        REGISTRY_CREDENTIALS=$(az acr credential show --name "$TARGET_REGISTRY")
                        REGISTRY_USERNAME=$(echo "$REGISTRY_CREDENTIALS" | jq '.username' --raw-output )
                        echo "Username: $REGISTRY_USERNAME"
                        REGISTRY_PASSWORD=$(echo "$REGISTRY_CREDENTIALS" | jq '.passwords[0].value' --raw-output )

                        export REGISTRY_USERNAME
                        yq eval '.properties.imageRegistryCredentials[0].username = strenv(REGISTRY_USERNAME)' "$TMP_CONF_FILE" -i
                        export REGISTRY_PASSWORD
                        yq eval '.properties.imageRegistryCredentials[0].password = strenv(REGISTRY_PASSWORD)' "$TMP_CONF_FILE" -i

                        echo Deploying
                        az container create \
                          --name "$TARGET_CONTAINER_INSTANCE_NAME" \
                          --resource-group "$TARGET_RESOURCE_GROUP" \
                          --file "$TMP_CONF_FILE"
