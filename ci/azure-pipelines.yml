pool:
  vmImage: ubuntu-latest

trigger:
  branches:
    include:
      - '*'
  tags:
    include:
      - 'v*'

variables:
  - group: cgm-rg
  - name: DOCKER_CACHE_DIR
    value: $(Pipeline.Workspace)/docker_cache
  - name: DOCKER_CACHE_IMG_FILE
    value: image.tar
  - name: VENV_CACHE_DIR
    value: $(Pipeline.Workspace)/.venv
  - name: System.Debug
    value: 'true'

parameters:
  - name: var_groups
    type: object
    default:
      - sandbox
      - demo-qa
      - inbmz
      - naunam

stages:
  - ${{ each env in parameters.var_groups }}:
    - stage: Deploy_${{ replace(env, '-', '_') }}
      displayName: Deploy ${{ env }}
      dependsOn: 
        #- Setup
        #- Build
      condition: succeeded() # and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
      variables:
        - group: cgm-rg-${{ env }}-ci
      jobs:
        - deployment: Deploy_Container_Instance
          displayName: "Container Instance deployment ${{ env }}"
          environment: cgm-rg-${{ env }}-env
          variables:
            isRelease: $[startsWith(variables['Build.SourceBranch'], 'refs/tags/')]
          strategy:
            runOnce:
              deploy:
                steps:
                  # Specify python version
                  - task: UsePythonVersion@0
                    inputs:
                      versionSpec: '3.x'
                      architecture: 'x64'
                  - bash: pip install azure-cli==2.29.2
                    displayName: 'Downgrade Azure CLI to 2.29.2'
                  - task: AzureCLI@2
                    displayName: Update Container Instance
                    inputs:
                      azureSubscription: cgm-${{ env }}-sub-cd
                      scriptType: bash
                      scriptLocation: inlineScript
                      inlineScript: |
                        # sudo apt install -y --allow-downgrades azure-cli=2.29.2-1~bionic
                        # sudo apt-get remove azure-cli
                        # curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null
                        # echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/azure-cli.list
                        # sudo apt-get update
                        # sudo apt-get install -y azure-cli=2.29.2-1~focal
                        
                        set -e
                        
                        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
                        # Export current setup -> modify and use as input for in-place update
                        TMP_CONF_FILE=rg-ci-conf.yaml
                        az container export \
                          --name "$TARGET_CONTAINER_INSTANCE_NAME" \
                          --resource-group "$TARGET_RESOURCE_GROUP" \
                          --file "$TMP_CONF_FILE"

                        # Replace image
                        IMAGE="$(TARGET_REGISTRY)/$(IMAGE_REPOSITORY):$(TAG)"
                        export IMAGE
                        yq eval '.properties.containers[0].properties.image = strenv(IMAGE)' "$TMP_CONF_FILE" -i

                        # Insert registry credentials
                        REGISTRY_CREDENTIALS=$(az acr credential show --name "$TARGET_REGISTRY")

                        REGISTRY_USERNAME=$(echo "$REGISTRY_CREDENTIALS" | jq '.username' --raw-output )
                        export REGISTRY_USERNAME
                        yq eval '.properties.imageRegistryCredentials[0].username = strenv(REGISTRY_USERNAME)' \
                          "$TMP_CONF_FILE" --inplace

                        REGISTRY_PASSWORD=$(echo "$REGISTRY_CREDENTIALS" | jq '.passwords[0].value' --raw-output )
                        export REGISTRY_PASSWORD
                        yq eval '.properties.imageRegistryCredentials[0].password = strenv(REGISTRY_PASSWORD)' \
                          "$TMP_CONF_FILE" --inplace

                        # Deploy updated image
                        az container create \
                          --name "$TARGET_CONTAINER_INSTANCE_NAME" \
                          --resource-group "$TARGET_RESOURCE_GROUP" \
                          --file "$TMP_CONF_FILE"
